plugins {
  id 'groovy'
  id 'org.jenkins-ci.jpi' version '0.39.0'
  id 'jacoco'
  id "com.diffplug.gradle.spotless" version "3.29.0"
  id 'codenarc'
}

repositories {
    jcenter()
    maven {
        url('https://repo.jenkins-ci.org/public/')
    }
}

group = 'org.jenkins-ci.plugins'
version = '2.0-alpha'
description = 'Allows users to create tool-agnostic, templated pipelines to be shared by multiple teams'

jenkinsPlugin {
    coreVersion = '2.138.1'
    shortName = 'templating-engine'
    displayName = 'Templating Engine'
    url = 'https://github.com/jenkinsci/templating-engine-plugin'
    disabledTestInjection = false
    localizerOutputDir = "${project.buildDir}/generated-src/localizer"
    configureRepositories = false
    configurePublishing = true
    developers {
        developer {
            id 'steven-terrana'
            name 'Steven Terrana'
            email 'terrana_steven@bah.com'
        }
        developer {
            id 'carlosokieffebah'
            name 'Carlos Okieffe'
            email 'okieffe_carlos@bah.com'
        }
    }
}

dependencies {
    // plugin dependencies
    implementation 'org.jenkins-ci.plugins.workflow:workflow-multibranch:2.20'
    implementation 'org.jenkins-ci.plugins.workflow:workflow-api:2.28'
    implementation 'org.jenkins-ci.plugins:branch-api:2.0.20'
    implementation 'org.jenkins-ci.plugins:scm-api:2.2.7'
    implementation 'org.jenkins-ci.plugins:junit:1.24'
    implementation 'org.jenkins-ci.plugins:github-branch-source:2.5.1'
    implementation 'org.jgrapht:jgrapht-core:1.4.0'

    // unit test dependencies
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.4'
    testImplementation 'net.bytebuddy:byte-buddy:1.10.7' // used by Spock
    testImplementation 'org.objenesis:objenesis:3.1'     // used by Spock
    testImplementation(group: 'org.jenkins-ci.plugins', name: 'git', version:'3.9.3', classifier:'tests') {
        exclude(module: 'httpclient')
        exclude(module: 'annotation-indexer')
    }

    // test plugins
    testImplementation(group: "org.jenkins-ci.plugins", name: "scm-api", version: "2.3.0", classifier: "tests")
    testImplementation(group: 'org.jenkins-ci.plugins', name: 'git', version:'3.9.3') {
        exclude(module: 'httpclient')
        exclude(module: 'annotation-indexer')
    }
    testImplementation 'org.jenkins-ci.plugins:token-macro:1.12.1'
    testImplementation 'org.jenkins-ci.plugins.workflow:workflow-aggregator:2.6'
    testImplementation 'org.jenkins-ci.plugins.workflow:workflow-step-api:2.19'
}

jacocoTestReport {
    reports {
        html.enabled true
    }
}

spotless{
    groovy{
        target = fileTree("src/main/groovy") + fileTree(dir: "src/main/resources", include: "**/*.groovy")
        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
        licenseHeaderFile 'groovy.header'
    }
}

codenarc {
    toolVersion = '1.6.1'
    configFile = file('./config/codenarc/rules.groovy')

}

codenarcMain{
    source = fileTree("src/main/groovy") + fileTree(dir: "src/main/resources", include: "**/*.groovy")
}

codenarcTest{
    configFile = file('./config/codenarc/rulesTest.groovy')
}

task codenarc {
    description = "Evaluate code against CodeNarc"
    dependsOn = [ 'codenarcMain', 'codenarcTest' ]
}

sourceSets {
    main{
        java{
            srcDirs = []
        }
        groovy {
            srcDirs = ["src/main/groovy", "src/main/java"]
            exclude "**/package-info.groovy"
        }
    }
}

groovydoc{
    source fileTree("src/main/groovy")
}
